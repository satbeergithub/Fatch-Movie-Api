{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onaddMovie","control","htmlFor","type","ref","rows","App","useState","setmovies","isloading","setloading","error","seterror","fetch","response","ok","Error","json","data","console","log","loadedmovies","push","message","content","length","MoviesList","Fragment","mov","method","body","JSON","stringify","headers","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":";4HACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,2LCajBC,EAVD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,e,gBCWDC,EAfG,SAACP,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CACEO,IAAKP,EAAMQ,GACXP,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,mB,wBC8BdM,MAvCf,SAAkBZ,GAChB,IAAMa,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAiB9B,OACE,0BAAMG,SAhBR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMhB,EAAQ,CACZC,MAAOS,EAASO,QAAQC,MACxBf,YAAaS,EAAeK,QAAQC,MACpChB,YAAaW,EAAeI,QAAQC,OAGtCrB,EAAMsB,WAAWnB,KAMf,yBAAKF,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOd,GAAG,QAAQe,IAAKb,KAErC,yBAAKZ,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUG,KAAK,IAAIhB,GAAG,eAAee,IAAKX,KAE5C,yBAAKd,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOd,GAAG,OAAOe,IAAKV,KAEpC,+C,yyMC0DSY,MAzFf,WAGE,MAA6BC,mBAAS,IAAtC,mBAAOrB,EAAP,KAAesB,EAAf,KACA,EAA+BD,oBAAS,GAAxC,mBAAME,EAAN,KAAkBC,EAAlB,KACA,EAAwBH,mBAAS,MAAjC,mBAAMI,EAAN,KAAaC,EAAb,KALa,4CAUd,iGACCF,GAAW,GACXE,EAAS,MAFV,kBAM0BC,MAAM,oEANhC,WAMSC,EANT,QAOgBC,GAPhB,qBAQqB,4CACV,IAAIC,MADM,6CARrB,wBAWsBF,EAASG,OAX/B,QAcG,IAAW7B,KAHL8B,EAXT,OAYKC,QAAQC,IAAKF,GACTG,EAAe,GACHH,EAChBG,EAAaC,KAAK,CAChBjC,GAAGD,EACHN,MAAOoC,EAAK9B,GAAKN,MACjBE,YAAakC,EAAK9B,GAAKJ,YACvBD,YAAamC,EAAK9B,GAAKL,cAI3ByB,EAAUa,GAvBb,kDA2BCT,EAAS,KAAMW,SA3BhB,QA6BCb,GAAW,GA7BZ,2DAVc,sBAwDf,IAAIc,EAAU,8CAYZ,OAXEtC,EAAOuC,OAAS,IAClBD,EAAU,kBAACE,EAAD,CAAYxC,OAAQA,KAE5ByB,IACFa,EAAU,2BAAIb,IAEZF,IACFe,EAAQ,yDAKN,kBAAC,IAAMG,SAAP,KACE,iCACE,kBAAC,EAAD,CAAU3B,WA5BlB,SAA0B4B,GACxBf,MAAM,mEAAoE,CACxEgB,OAAO,OACPC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAQ,CACN,eAAe,0BAyBf,iCACE,4BAAQC,QA1ED,4CA0EP,iBAEF,iCAMAV,KCnFOW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,kBAAC,EAAD,S","file":"static/js/main.194caf88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__nMpmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2LnI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__3pjbV\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n \n    props.onaddMovie(movie);\n \n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useEffect } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport AddMovie from './components/AddMovie';\n \nfunction App() {\n\n\n  const [movies, setmovies]  = useState([])\n  const[isloading , setloading]= useState(false)\n  const[error, seterror]= useState(null)\n  \n\n\n\n async function fetchmoviehandler ()  {\n  setloading(true)\n  seterror(null)\n\n  \n  try {\n    const response = await fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json')\n    if(!response.ok){\n      const message = 'something went wrong!!...please try again' \n      throw new Error (message);\n     }\n    const data = await response.json();\n      console.log (data)\n    const loadedmovies = [];\n    for (const key in data ){\n      loadedmovies.push({\n        id:key,\n        title: data[key].title,\n        openingText: data[key].openingText,\n        releaseDate: data[key].releaseDate,\n        \n      })\n    }\n    setmovies(loadedmovies)\n  \n  } \n  catch (error){\n  seterror(error.message);\n  }\n  setloading(false);\n };\n\n\nfunction addMovieHandler (mov) {\n  fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json', {\n    method:'POST',\n    body: JSON.stringify(mov),\n    headers:{\n      'Content-Type':'application/json'\n    }\n  })\n}\n\n\n\n\nlet content = <p>found no movies</p>\nif (movies.length > 0) {\n  content = <MoviesList movies={movies} />\n}\nif (error) {\n  content = <p>{error}</p>\n}\nif (isloading) {\n  content=<p>loading....wait for a sec</p>\n}\n\n \n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onaddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchmoviehandler}  >Fetch Movies</button>\n      </section>\n      <section>\n       {/* {!isloading && <MoviesList movies={movies} />} \n       {!isloading &&  movies.length===0 && !error &&<p> Found no movie</p> }\n      {!isloading  && error && <p>{error}</p>}\n       {isloading && <p>loading....wait for a sec</p>} */}\n \n     {content}\n\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// async function fetchmoviehandler ()  {\n//   setloading(true)\n//   seterror(null)\n\n  \n//   try {\n//     const response = await fetch('url of star war api')\n//     if(!response.ok){\n//       const message = 'something went wrong!!...please try again' \n//       throw new Error (message);\n//      }\n//     const data = await response.json();\n//      console.log(data)\n//     const transformedmoviesdata = data.results.map(movieData =>{\n//      return {\n//        key: movieData.episode_id,\n//        title: movieData.title,\n//        openingText: movieData.opening_crawl,\n//        releaseDate: movieData.release_date\n \n//      };\n//     })\n//     setmovies(transformedmoviesdata)\n  \n//   } \n//   catch (error){\n//   seterror(error.message);\n//   }","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}