{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satbeer\\\\Desktop\\\\Projects\\\\FETCH MOVIE API\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setmovies] = useState([]);\n  const [isloading, setloading] = useState(false);\n  const [error, seterror] = useState(null);\n\n  async function fetchmoviehandler() {\n    setloading(true);\n    seterror(null);\n\n    try {\n      const response = await fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json');\n\n      if (!response.ok) {\n        const message = 'something went wrong!!...please try again';\n        throw new Error(message);\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const transformedmoviesdata = data.results.map(movieData => {\n        return {\n          key: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setmovies(transformedmoviesdata);\n    } catch (error) {\n      seterror(error.message);\n    }\n\n    setloading(false);\n  }\n\n  ;\n\n  function addMovieHandler(movie) {\n    fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"found no movies\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, error);\n  }\n\n  if (isloading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"loading....wait for a sec\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onaddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchmoviehandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","MoviesList","useState","AddMovie","App","movies","setmovies","isloading","setloading","error","seterror","fetchmoviehandler","response","fetch","ok","message","Error","data","json","console","log","transformedmoviesdata","results","map","movieData","key","episode_id","title","openingText","opening_crawl","releaseDate","release_date","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"sources":["C:/Users/Satbeer/Desktop/Projects/FETCH MOVIE API/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport AddMovie from './components/AddMovie';\n \nfunction App() {\n\n\n  const [movies, setmovies]  = useState([])\n  const[isloading , setloading]= useState(false)\n  const[error, seterror]= useState(null)\n  \n\n\n\n async function fetchmoviehandler ()  {\n  setloading(true)\n  seterror(null)\n\n  \n  try {\n    const response = await fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json')\n    if(!response.ok){\n      const message = 'something went wrong!!...please try again' \n      throw new Error (message);\n     }\n    const data = await response.json();\n     console.log(data)\n    const transformedmoviesdata = data.results.map(movieData =>{\n     return {\n       key: movieData.episode_id,\n       title: movieData.title,\n       openingText: movieData.opening_crawl,\n       releaseDate: movieData.release_date\n \n     };\n    })\n    setmovies(transformedmoviesdata)\n  \n  } \n  catch (error){\n  seterror(error.message);\n  }\n  setloading(false);\n };\n\n\nfunction addMovieHandler (movie) {\n  fetch('https://react-https-8076-default-rtdb.firebaseio.com/movies.json', {\n    method:'POST',\n    body: JSON.stringify(movie),\n    headers:{\n      'Content-Type':'application/json'\n    }\n  })\n}\n\n\n\n\nlet content = <p>found no movies</p>\nif (movies.length > 0) {\n  content = <MoviesList movies={movies} />\n}\nif (error) {\n  content = <p>{error}</p>\n}\nif (isloading) {\n  content=<p>loading....wait for a sec</p>\n}\n\n \n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onaddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchmoviehandler}  >Fetch Movies</button>\n      </section>\n      <section>\n       {/* {!isloading && <MoviesList movies={movies} />} \n       {!isloading &&  movies.length===0 && !error &&<p> Found no movie</p> }\n      {!isloading  && error && <p>{error}</p>}\n       {isloading && <p>loading....wait for a sec</p>} */}\n \n     {content}\n\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}